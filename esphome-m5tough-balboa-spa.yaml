# M5Tough Balboa Spa Monitor - Optimized Standalone ESPHome Configuration with MQTT
# Reduced CRC errors and improved communication stability
# Uses MQTT for Home Assistant integration instead of API

esphome:
  name: !secret device_name
  friendly_name: !secret friendly_name
  build_path: .build/esphome_m5tough_balboa_spa

esp32:
  board: m5stack-core2
  framework:
    type: arduino

# Reduced logging to minimize interference with UART communication
logger:
  level: INFO
  baud_rate: 115200
  # Reduce logs that might interfere with spa communication
  logs:
    uart.arduino_esp32: WARN
    sensor: WARN
    template.sensor: WARN

# WiFi configuration using secrets
wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  
  # Enable fallback hotspot with password from secrets
  ap:
    ssid: "M5Tough-Balboa-Spa"
    password: !secret fallback_hotspot_password

captive_portal:

# Standalone web server with authentication from secrets
web_server:
  port: 80
  include_internal: true
  local: true
  auth:
    username: !secret web_username
    password: !secret web_password

# MQTT configuration instead of API
mqtt:
  broker: !secret mqtt_broker
  port: !secret mqtt_port
  username: !secret mqtt_username
  password: !secret mqtt_password
  discovery: false
  discovery_retain: false
  topic_prefix: home/m5tough-balboa-spa
  # Birth message (sent when device connects) 
  birth_message:
    topic: home/m5tough-balboa-spa/LWT
    payload: "online"
    retain: true
  # Will message (sent when device disconnects unexpectedly)
  will_message:
    topic: home/m5tough-balboa-spa/LWT
    payload: "offline"
    retain: true

# OTA updates with optional password protection
ota:
  - platform: esphome
    # Uncomment the next line and set ota_password in secrets.yaml for password protection
    # password: !secret ota_password

# OPTIMIZED UART configuration for better CRC handling
uart:
  id: spa_uart_bus
  tx_pin: GPIO32  # Grove Port A TX pin
  rx_pin: GPIO33  # Grove Port A RX pin
  baud_rate: 115200
  data_bits: 8
  parity: NONE
  stop_bits: 1
  # Increased buffer sizes for better message handling
  rx_buffer_size: 1024
  # Enable hardware flow control if available
  # rts_pin: GPIO4  # Uncomment if you have RTS connected
  # cts_pin: GPIO5  # Uncomment if you have CTS connected

# External Balboa Spa component
external_components:
  - source:
      type: git
      url: https://github.com/brianfeucht/esphome-balboa-spa
      ref: main
    components: [balboa_spa]

# OPTIMIZED Balboa Spa component configuration
balboa_spa:
  id: spa
  spa_temp_scale: C
  esphome_temp_scale: C
  uart_id: spa_uart_bus

# Climate control with optimized settings
climate:
  - platform: balboa_spa
    balboa_spa_id: spa
    name: "Spa Thermostat"
    id: spa_thermostat
    visual:
      min_temperature: 15 °C
      max_temperature: 30 °C  
      temperature_step: 0.5 °C

# Switches for spa controls with debouncing
switch:
  - platform: balboa_spa
    balboa_spa_id: spa
    jet1:
      name: "Spa Jet 1"
      id: spa_jet1
      icon: "mdi:turbine"
      # Add turn-on/off actions for better control
      on_turn_on:
        - logger.log: "Jet 1 turned ON"
      on_turn_off:
        - logger.log: "Jet 1 turned OFF"
    jet2:
      name: "Spa Jet 2"
      id: spa_jet2
      icon: "mdi:turbine"
      on_turn_on:
        - logger.log: "Jet 2 turned ON"
      on_turn_off:
        - logger.log: "Jet 2 turned OFF"
    light:
      name: "Spa Light"
      id: spa_light
      icon: "mdi:lightbulb"
      on_turn_on:
        - logger.log: "Light turned ON"
      on_turn_off:
        - logger.log: "Light turned OFF"

# Core spa sensors with reduced update frequency
sensor:
  - platform: balboa_spa
    balboa_spa_id: spa
    
    # Heat state
    heatstate:
      name: "Spa Heat State"
      id: spa_heat_state
      icon: "mdi:thermometer"
      # Add filtering for stable readings
      filters:
        - throttle: 2s
    
    # Circulation pump
    circulation:
      name: "Spa Circulation"
      id: spa_circulation
      icon: "mdi:rotate-3d-variant"
      filters:
        - throttle: 5s
    
   
    # Rest mode
    restmode:
      name: "Spa Rest Mode"
      id: spa_rest_mode
      icon: "mdi:sleep"
      filters:
        - throttle: 5s

  # OPTIMIZED Template sensors with reduced update frequency
  - platform: template
    name: "Spa Current Temperature"
    id: spa_current_temp
    unit_of_measurement: "°C"
    device_class: "temperature"
    state_class: "measurement"
    accuracy_decimals: 1
    # Reduced update frequency to minimize communication conflicts
    update_interval: 30s
    lambda: |-
      if (id(spa_thermostat).current_temperature != NAN) {
        return id(spa_thermostat).current_temperature;
      } else {
        return {};
      }
    filters:
      # Add filtering to smooth out readings
      - filter_out: nan
      - throttle: 10s

  - platform: template
    name: "Spa Target Temperature"
    id: spa_target_temp
    unit_of_measurement: "°C"
    device_class: "temperature"
    state_class: "measurement"
    accuracy_decimals: 1
    update_interval: 30s
    lambda: |-
      if (id(spa_thermostat).target_temperature != NAN) {
        return id(spa_thermostat).target_temperature;
      } else {
        return {};
      }
    filters:
      - filter_out: nan
      - throttle: 10s

  # System sensors with reduced frequency
  - platform: wifi_signal
    name: "WiFi Signal"
    update_interval: 120s
    entity_category: diagnostic

  - platform: uptime
    name: "Uptime"
    update_interval: 120s
    entity_category: diagnostic

# Binary sensors
binary_sensor:
  - platform: status
    name: "Device Status"
    entity_category: diagnostic

# Text sensors
text_sensor:
  - platform: wifi_info
    ip_address:
      name: "IP Address"
      entity_category: diagnostic
      update_interval: 60s
    ssid:
      name: "Connected SSID"
      entity_category: diagnostic
      update_interval: 60s
    mac_address:
      name: "MAC Address"
      entity_category: diagnostic

  - platform: version
    name: "ESPHome Version"
    entity_category: diagnostic

# Restart button
button:
  - platform: restart
    name: "Restart"
    id: spa_restart_btn
    entity_category: diagnostic

# Add connection monitoring and automatic recovery
interval:
  - interval: 60s
    then:
      - logger.log: "Spa communication check - monitoring for stability"
  - interval: 48h
    then:
      - logger.log: "Auto-restarting device for stability"
      - button.press:  spa_restart_btn
